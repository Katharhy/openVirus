<?xml version="1.0" encoding="UTF-8"?>
<app-group>
 <app id="insr12402-app-0001" content-type="Appendix">
  <label>Appendix A</label>
  <sec id="insr12402-sec-1052">
   <label>A.1</label>
   <sec id="insr12402-sec-0054">
    <title>A1 The Runge–Kutta Approximation</title>
    <p>The Runge–Kutta method is an efficient and widely used approach to solving ordinary differential equations when analytic closed‐form solutions are unavailable. It is typically applied to derive a numerical functional system of high‐order accuracy with no need of high‐order derivatives of functions. The most well‐known Runge–Kutta approximation is the Runge–Kutta fourth‐order (RK4) method. For example, in the case of the mechanistic SIR model (
     <xref rid="insr12402-disp-0001" ref-type="disp-formula">1</xref>), because the three ordinary differential equations of the SIR model are non‐linear, there exist no closed‐form solutions of 
     <italic>S</italic>(
     <italic>t</italic>), 
     <italic>I</italic>(
     <italic>t</italic>) and 
     <italic>R</italic>(
     <italic>t</italic>). These approximate solution can be obtained by the RK4 method.
    </p>
    <p>Assume a general ordinary differential equation problem: 
     <disp-formula id="insr12402-disp-0029">
      <math id="nlm-math-115">
       <mrow>
        <mfrac>
         <mrow>
          <mi>d</mi>
          <mi>y</mi>
         </mrow>
         <mrow>
          <mi>d</mi>
          <mi>t</mi>
         </mrow>
        </mfrac>
        <mo>=</mo>
        <mi>f</mi>
        <mo stretchy="false">(</mo>
        <mi>t</mi>
        <mo>,</mo>
        <mi>y</mi>
        <mo stretchy="false">)</mo>
        <mo>,</mo>
        <mspace width="1em"/>
        <mtext>with a boundary condition</mtext>
        <mspace width="1em"/>
        <mi>y</mi>
        <mo stretchy="false">(</mo>
        <msub>
         <mrow>
          <mi>t</mi>
         </mrow>
         <mrow>
          <mn>0</mn>
         </mrow>
        </msub>
        <mo stretchy="false">)</mo>
        <mo>=</mo>
        <msub>
         <mrow>
          <mi>y</mi>
         </mrow>
         <mrow>
          <mn>0</mn>
         </mrow>
        </msub>
        <mo>,</mo>
       </mrow>
      </math>
     </disp-formula> where 
     <italic>y</italic> is an unknown function in time 
     <italic>t</italic>, which can be either a scalar or a vector. Then for a preselected (small) step size 
     <italic>h</italic>&gt;0, a fourth‐order approximate solution of 
     <italic>y</italic> satisfies at a sequence of equally spaced grid points 
     <italic>y</italic>
     <sub>
      <italic>n</italic>
     </sub>,
     <italic>n</italic>=0,1,…, with |
     <italic>y</italic>
     <sub>
      <italic>n</italic>
     </sub>−
     <italic>y</italic>
     <sub>
      <italic>n</italic>−1
     </sub>|=
     <italic>h</italic>, 
     <disp-formula id="insr12402-disp-0030">
      <math id="nlm-math-116">
       <mrow>
        <msub>
         <mrow>
          <mi>y</mi>
         </mrow>
         <mrow>
          <mi>n</mi>
          <mo>+</mo>
          <mn>1</mn>
         </mrow>
        </msub>
        <mo>=</mo>
        <msub>
         <mrow>
          <mi>y</mi>
         </mrow>
         <mrow>
          <mi>n</mi>
         </mrow>
        </msub>
        <mo>+</mo>
        <mfrac>
         <mrow>
          <mn>1</mn>
         </mrow>
         <mrow>
          <mn>6</mn>
         </mrow>
        </mfrac>
        <mi>h</mi>
        <mo stretchy="false">(</mo>
        <msub>
         <mrow>
          <mi>k</mi>
         </mrow>
         <mrow>
          <mn>1</mn>
         </mrow>
        </msub>
        <mo>+</mo>
        <mn>2</mn>
        <msub>
         <mrow>
          <mi>k</mi>
         </mrow>
         <mrow>
          <mn>2</mn>
         </mrow>
        </msub>
        <mo>+</mo>
        <mn>2</mn>
        <msub>
         <mrow>
          <mi>k</mi>
         </mrow>
         <mrow>
          <mn>3</mn>
         </mrow>
        </msub>
        <mo>+</mo>
        <msub>
         <mrow>
          <mi>k</mi>
         </mrow>
         <mrow>
          <mn>4</mn>
         </mrow>
        </msub>
        <mo stretchy="false">)</mo>
        <mo>,</mo>
        <mi>n</mi>
        <mo>=</mo>
        <mn>0</mn>
        <mo>,</mo>
        <mn>1</mn>
        <mo>,</mo>
        <mo>…</mo>
        <mo>,</mo>
       </mrow>
      </math>
     </disp-formula> where 
     <disp-formula id="insr12402-disp-0031">
      <math id="nlm-math-117">
       <mrow>
        <mtable>
         <mtr>
          <mtd columnalign="right">
           <msub>
            <mrow>
             <mi>k</mi>
            </mrow>
            <mrow>
             <mn>1</mn>
            </mrow>
           </msub>
          </mtd>
          <mtd columnalign="left">
           <mo>=</mo>
           <mi>f</mi>
           <mo stretchy="false">(</mo>
           <msub>
            <mrow>
             <mi>t</mi>
            </mrow>
            <mrow>
             <mi>n</mi>
            </mrow>
           </msub>
           <mo>,</mo>
           <msub>
            <mrow>
             <mi>y</mi>
            </mrow>
            <mrow>
             <mi>n</mi>
            </mrow>
           </msub>
           <mo stretchy="false">)</mo>
           <mo>,</mo>
          </mtd>
          <mtd columnalign="right"/>
         </mtr>
         <mtr>
          <mtd columnalign="right">
           <msub>
            <mrow>
             <mi>k</mi>
            </mrow>
            <mrow>
             <mn>2</mn>
            </mrow>
           </msub>
          </mtd>
          <mtd columnalign="left">
           <mo>=</mo>
           <mi>f</mi>
           <mfenced separators="" open="(" close=")">
            <mrow>
             <msub>
              <mrow>
               <mi>t</mi>
              </mrow>
              <mrow>
               <mi>n</mi>
              </mrow>
             </msub>
             <mo>+</mo>
             <mfrac>
              <mrow>
               <mi>h</mi>
              </mrow>
              <mrow>
               <mn>2</mn>
              </mrow>
             </mfrac>
             <mo>,</mo>
             <msub>
              <mrow>
               <mi>y</mi>
              </mrow>
              <mrow>
               <mi>n</mi>
              </mrow>
             </msub>
             <mo>+</mo>
             <mi>h</mi>
             <mfrac>
              <mrow>
               <msub>
                <mrow>
                 <mi>k</mi>
                </mrow>
                <mrow>
                 <mn>1</mn>
                </mrow>
               </msub>
              </mrow>
              <mrow>
               <mn>2</mn>
              </mrow>
             </mfrac>
            </mrow>
           </mfenced>
           <mo>,</mo>
          </mtd>
         </mtr>
         <mtr>
          <mtd columnalign="right">
           <msub>
            <mrow>
             <mi>k</mi>
            </mrow>
            <mrow>
             <mn>3</mn>
            </mrow>
           </msub>
          </mtd>
          <mtd columnalign="left">
           <mo>=</mo>
           <mi>f</mi>
           <mfenced separators="" open="(" close=")">
            <mrow>
             <msub>
              <mrow>
               <mi>t</mi>
              </mrow>
              <mrow>
               <mi>n</mi>
              </mrow>
             </msub>
             <mo>+</mo>
             <mfrac>
              <mrow>
               <mi>h</mi>
              </mrow>
              <mrow>
               <mn>2</mn>
              </mrow>
             </mfrac>
             <mo>,</mo>
             <msub>
              <mrow>
               <mi>y</mi>
              </mrow>
              <mrow>
               <mi>n</mi>
              </mrow>
             </msub>
             <mo>+</mo>
             <mi>h</mi>
             <mfrac>
              <mrow>
               <msub>
                <mrow>
                 <mi>k</mi>
                </mrow>
                <mrow>
                 <mn>2</mn>
                </mrow>
               </msub>
              </mrow>
              <mrow>
               <mn>2</mn>
              </mrow>
             </mfrac>
            </mrow>
           </mfenced>
           <mo>,</mo>
          </mtd>
         </mtr>
         <mtr>
          <mtd columnalign="right">
           <msub>
            <mrow>
             <mi>k</mi>
            </mrow>
            <mrow>
             <mn>4</mn>
            </mrow>
           </msub>
          </mtd>
          <mtd columnalign="left">
           <mo>=</mo>
           <mi>f</mi>
           <mo stretchy="false">(</mo>
           <msub>
            <mrow>
             <mi>t</mi>
            </mrow>
            <mrow>
             <mi>n</mi>
            </mrow>
           </msub>
           <mo>+</mo>
           <mi>h</mi>
           <mo>,</mo>
           <msub>
            <mrow>
             <mi>y</mi>
            </mrow>
            <mrow>
             <mi>n</mi>
            </mrow>
           </msub>
           <mo>+</mo>
           <mi>h</mi>
           <msub>
            <mrow>
             <mi>k</mi>
            </mrow>
            <mrow>
             <mn>3</mn>
            </mrow>
           </msub>
           <mo stretchy="false">)</mo>
           <mo>.</mo>
          </mtd>
         </mtr>
        </mtable>
       </mrow>
      </math>
     </disp-formula> Because four terms 
     <italic>k</italic>
     <sub>1</sub>, 
     <italic>k</italic>
     <sub>2</sub>, 
     <italic>k</italic>
     <sub>3</sub> and 
     <italic>k</italic>
     <sub>4</sub> are used in the approximation, the earlier method is termed as an RK4 method of the ODE solution to function 
     <italic>y</italic>. For a general RK approximation, refer to Stoer and Bulirsch (
     <xref rid="insr12402-bib-0084" ref-type="ref">2013</xref>).
    </p>
   </sec>
   <sec id="insr12402-sec-0055">
    <title>A2 Michigan Coronavirus Disease 2019 Data</title>
    <p>In the succeeding text, we list Michigan data from 11 March to 10 June 2020. The numbers of daily confirmed cases and deaths are obtained from the GitHub repository JHU CSSE (
     <ext-link ext-link-type="uri" xlink:href="https://github.com/CSSEGISandData/COVID-19" xmlns:xlink="http://www.w3.org/1999/xlink">https://github.com/CSSEGISandData/COVID‐19</ext-link>), and the daily recovery data are collected from 1Point3Acres (
     <ext-link ext-link-type="uri" xlink:href="https://coronavirus.1point3acres.com" xmlns:xlink="http://www.w3.org/1999/xlink">https://coronavirus.1point3acres.com</ext-link>). The daily cumulative numbers of deaths and recovered cases are then summed as the cumulative number of removed cases. In such surveillance data, there are data reporting gaps shown in Figure 
     <xref rid="insr12402-fig-0015" ref-type="fig">A1</xref> that are possibly caused by the so‐called clustered reporting; that is, the recovered cases have not been released on the daily basis. To mitigate this data reporting artefact, we invoked a simple local polynomial regression procedure (LOESS) to smooth such unnatural jumps, resulting in a smooth fitted curve shown in Figure 
     <xref rid="insr12402-fig-0015" ref-type="fig">A1</xref>. The calibrated cumulative numbers of removed cases from the fitted curve (rounded to the corresponding integers) are available from the corresponding author upon request. The total population in Michigan is set as 9.99 million. The summarised US state‐level count data, which are weekly updated, can be also be found directly from the 
     <monospace>eSIR</monospace> package introduced in Section 
     <xref rid="insr12402-sec-0030" ref-type="sec">5.4</xref>.
    </p>
   </sec>
  </sec>
 </app>
</app-group>
